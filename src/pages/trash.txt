    
    const {dataPost, setDataPost} = useContext(CacheContext)
    const [isAddDataPost, setIsAddDataPost] = useState(false)
    const [loadMore, setLoadMore] = useState(false)
    const [skipData, setSkipData] = useState(0)
    useEffect(() => {
        const fetchDataPost = async () => {
            try { 
                const res = await axios.get(`https://dummyjson.com/recipes?limit=10&skip=${skipData}`)
                setTimeout(() => {
                    setDataPost(prev => ({
                        data : [...prev.data, ...res.data.recipes],
                        total : res.data.total
                    }))
                }, 800)

            } catch (err) {
                console.log(err)
            }
        }
        if ((skipData < dataPost.total && dataPost.data.length)|| !(dataPost.data.length)) {
            fetchDataPost()
            
        }
    }, [skipData])
    
    const observerRef = useRef(null)
    useEffect(() => {   
        const observeOptions = {
            rootMargin  : '500px'
        }
        const observer = new IntersectionObserver(entries => {
            setIsAddDataPost(entries[0].isIntersecting)
        }, observeOptions)
        
        if (observerRef.current) {
            observer.observe(observerRef.current)
        }
        
        return () => {
          if (observerRef.current) observer.unobserve(observerRef.current)  
        } 

    }, [])

    useEffect(() => {
        if (isAddDataPost) {
            setSkipData(prev  => prev + 10)
            setLoadMore(true)
        } else {
            setLoadMore(false)
        } 
    }, [isAddDataPost])
